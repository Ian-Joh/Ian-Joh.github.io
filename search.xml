<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>排序非数字类型</title>
      <link href="/2022/01/23/zi-ding-yi-bi-jiao-han-shu/"/>
      <url>/2022/01/23/zi-ding-yi-bi-jiao-han-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="方法一：自定义比较函数"><a href="#方法一：自定义比较函数" class="headerlink" title="方法一：自定义比较函数"></a>方法一：自定义比较函数</h2><ul><li><p><code>sort</code>函数第三个参数可以供我们自定义比较的方法，可以直接定义一个<code>comparison</code>函数：</p>  <pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;typedef pair&lt;int, int&gt; PII;vector&lt;PII&gt; table;bool comparison(PII a, PII b)&#123; &#x2F;&#x2F;自定义的比较函数   return a.first &lt; b.first;  &#x2F;&#x2F;&#96;&lt;&#96;就是从小到大排序&#125;int main()&#123;   PII a &#x3D; &#123;1, 3&#125;;   PII b &#x3D; &#123;2, 2&#125;;   PII c &#x3D; &#123;3, 1&#125;;   table.push_back(a);   table.push_back(b);   table.push_back(c);   sort(table.begin(), table.end(), comparison); &#x2F;&#x2F;第三个参数为你的比较方法      for (auto item : table)   &#123;       cout &lt;&lt; item.first &lt;&lt; &#39; &#39; &lt;&lt; item.second &lt;&lt; endl;   &#125;      return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  输出的结果为：</p>  <pre class="line-numbers language-none"><code class="language-none">1 32 23 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="方法二：重载-lt-运算符"><a href="#方法二：重载-lt-运算符" class="headerlink" title="方法二：重载&lt;运算符"></a>方法二：重载<code>&lt;</code>运算符</h2><ul><li><p>结构体和类都可以使用此方法</p><p>  1.结构体中：</p>  <pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;using namespace std;struct Miss&#123;   int fir;   int sec;   Miss(int x, int y) : fir(x), sec(y) &#123;&#125; &#x2F;&#x2F;构造方法，在主函数中使用的时候是 Miss* 类型&#125;;bool operator&lt;(const Miss&amp; a, const Miss&amp; b)&#123; &#x2F;&#x2F;重载运算符&lt;        return a.fir &lt; b.fir; &#125;int main()&#123;   auto a &#x3D; new Miss(1, 3);   auto b &#x3D; new Miss(3, 1);   if (b &lt; a) cout &lt;&lt; &quot;a大于b&quot; &lt;&lt; endl; &#x2F;&#x2F; 仅仅重载了&#96;&lt;&#96;   else cout &lt;&lt; &quot;b大于a&quot; &lt;&lt; endl;      return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  2.类中：</p>  <pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;using namespace std;class Miss&#123;    public:        Miss(int x, int y) : fir(x), sec(y) &#123;&#125;;        bool operator&lt;(const Miss&amp; a)&#123; &#x2F;&#x2F;重载运算符            return this-&gt;fir &lt; a.fir;        &#125;    private:        int fir;        int sec;&#125;;int main()&#123;    auto a &#x3D; Miss(1, 3);    auto b &#x3D; Miss(3, 1);       if (a &lt; b) cout &lt;&lt; &quot;a&quot;;    else cout &lt;&lt; &quot;b&quot;;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客初探</title>
      <link href="/2022/01/22/bo-ke-chu-tan/"/>
      <url>/2022/01/22/bo-ke-chu-tan/</url>
      
        <content type="html"><![CDATA[<p>马上就是新年了，我也即将研二下学期，准备为实习做些东西、学点东西，于是开始写博客记录一下过程，第一次搭建博客，也走了不少弯路，花了不少时间，先介绍一哈我的电脑是mac的，全程使用的终端，部署在github上。</p><p><strong>STAR-&gt;&gt;&gt;</strong></p><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><h4 id="Github的创建以及Git的安装"><a href="#Github的创建以及Git的安装" class="headerlink" title="Github的创建以及Git的安装"></a><code>Github</code>的创建以及<code>Git</code>的安装</h4><p>这是基本，计算机er都会-&gt;</p><h4 id="nodejs和hexo的安装"><a href="#nodejs和hexo的安装" class="headerlink" title="nodejs和hexo的安装"></a><code>nodejs</code>和<code>hexo</code>的安装</h4><ul><li><p><code>nodejs</code><a href="https://nodejs.org/en/">官网下载</a>,进去后选择自己的系统下载即可</p></li><li><p><code>hexo</code>下载，此处用终端命令下载</p><pre class="line-numbers language-none"><code class="language-none">$ npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="创建一个博客"><a href="#创建一个博客" class="headerlink" title="创建一个博客"></a>创建一个博客</h4><ul><li><p>先创建一个文件夹用来放博客(比如我放在桌面的$blog中)</p><pre class="line-numbers language-none"><code class="language-none">$ cd Desktop$ mkdir blog$ cd blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>初始化博客<br><code>$ hexo init</code></p></li><li><p>静态部署博客<br><code>$ hexo g</code></p></li><li><p>部署在本地服务器<br><code>$ hexo s</code></p></li><li><p>进入<code>http://localhost:4000</code>查看</p></li></ul><h4 id="部署博客到Github"><a href="#部署博客到Github" class="headerlink" title="部署博客到Github"></a>部署博客到<code>Github</code></h4><ul><li><p>在<code>Github</code>创建新的仓库，命名为 “<code>你的仓库名字</code>.github.io”<br><img src="/medias/%E5%8D%9A%E5%AE%A2%E5%88%9D%E6%8E%A2/1.jpg" alt="图片">  </p></li><li><p>绑定<code>ssh key</code></p><p>1.确定你的电脑是否有<code>ssh key</code></p>  <pre class="line-numbers language-none"><code class="language-none">$ cd ~&#x2F;.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  如果找不到文件夹就是不存在进入步骤2，存在则进入步骤3</p><p>2.创建一个<code>ssh key</code></p>  <pre class="line-numbers language-none"><code class="language-none">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  之后的设置是设置密码和位置一类的，直接回车即可，想要设置的也可以查看参数自己设置</p><p>3.复制你的<code>ssh key</code>到<code>github上</code>,路径为<code>~/.ssh/id_rsa.pub</code>，随后登陆你的github，在右上的个人中添加公钥</p><p>  <img src="/medias/%E5%8D%9A%E5%AE%A2%E5%88%9D%E6%8E%A2/2.jpg" alt="图片"></p><p>  点击<code>new</code>即可</p></li><li><p>在博客的目录下修改<code>_config.yml</code>来更改博客的配置</p><p>1.打开配置文件<br>  <code>$ vim _config.yml</code></p><p>2.<code>G</code>到底部，修改url为你的github地址</p>  <pre class="line-numbers language-none"><code class="language-none">deploy:type: gitrepository: git@github.com:Ian-Joh&#x2F;Ian-Joh.github.io.git  #你的仓库SSH地址branch: main #你的分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>部署博客到<code>Github</code>上</p><blockquote><p>老三件套</p><pre class="line-numbers language-none"><code class="language-none">hexo clean #清除文件hexo g #静态部署hexo d #发布<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote></li></ul><p><strong>至此博客搭建完毕</strong></p><h4 id="增加主题"><a href="#增加主题" class="headerlink" title="增加主题"></a>增加主题</h4><p>本博客使用的是hexo-theme-matery,具体查看<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Github地址</a></p><hr><center> **华丽的分界线** </center><hr><h3 id="写第一个博客"><a href="#写第一个博客" class="headerlink" title="写第一个博客"></a>写第一个博客</h3><p>部署之后我们来开始写第一篇文章，内容分为三类，分别是草稿、文章和页面，此处只记录草稿<code>post</code>，</p><ul><li><p>使用hexo命令，后面接文章的命名，如‘test’</p><pre class="line-numbers language-none"><code class="language-none">$ hexo new post test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后可以在<code>./source/_post</code>内看到新建的md文件</p></li><li><p>编辑md，使用markdown打开，两个<code>--</code>之间的就是文章的属性，主要的选项功能如下表所示</p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">Markdown文章名</td><td align="left">文章的标题</td></tr><tr><td align="left">date</td><td align="left">time</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">none</td><td align="left">文章作者</td></tr><tr><td align="left">top</td><td align="left">false</td><td align="left">推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td align="left">hide</td><td align="left">false</td><td align="left">隐藏文章，如果hide值为true，则文章不会在首页显示</td></tr><tr><td align="left">cover</td><td align="left">false</td><td align="left">表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">mathjax</td><td align="left">none</td><td align="left">是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">none</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">none</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">none</td><td align="left">文章标签，一篇文章可以多个标签</td></tr></tbody></table><p>  例如：</p>  <pre class="line-numbers language-none"><code class="language-none">title: testdate: 2022-01-22 16:43:04author: Jingtao Fantop: false cover: falsehide: falsecategories: catmathjax: falsesummary: This is a summarytags:   - first  - second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>** 如此就可以开始写你的第一篇文章辣 **</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/21/hello-world/"/>
      <url>/2022/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
